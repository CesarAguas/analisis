### 22/09/2016 ######################


install.packages("car")
base1 <- data.frame(eco, est)

base1$ajuste.mod1 <- fitted(mod1)## valores ajustados
base1$residuales.mod1 <- residuals(mod1)
base1$rstudent.mod1 <- rstudent(mod1)


shapiro.test(base1$rstudent.mod1)
##prueba de hipotesis shapiro test
###Ho. la mustra tiene una distribucion normal
## ha :  la muestra no tiene dist normal
# tenemos un p value de .8172 no se rechaza la hipotess nula
#por lo tanto se acepta que no hay normalidad
#ahora veremos este resultadpo en ungrafico 

qqline(base1$rstudent.mod1, main = "Normal (0,1)")
#se obtiene la grafica de dispersion con la normal 0,1
qqline(base1$rstudent.mod1)

install.packages(("lmtest"))
require(lmtest)
bptest(mod1)
#en esta prueba esperamos que haya homogeneidad en la varianza
#Ho: is hay homogeneidad en las varianzas
#Ha: no hay homogegeidad en las arianzas
#en la prueba bptest obtenemos un pvalue de.6108
#por lo tanto no se rechaza la Ho,es decir se acepta con 95% de confianza la Ho
#para esto tenemos que tener pvalue mayor a .05., por lo que para 
#mod 1 se puede decir que hay homogeneidad en las varianzas
## prueba de autocorrelacion o independencia
##en este caso se utliza la prueba DUrbin Watson 

require(car)

dwtest (mod1, alternative = "two.sided")
##Ho : no hay autocorrelacion en los residuos
#ha: si hay autocrorrelacion enlos reciduos
#la prueba durbin watson genera un resultado de p value .9142
#por lo que no se rechaza la hipotesis nula
# debido a que tenemos un p value mayor a .05 ... esto quiere decir 
#que no hay autocorrelacion en los residuos...
#otra forma de evaluar la prueba de durbin watson es con el valor de durbin watsin
#que se espera que este en el rango de 1.5 a 2.5
#si esta dentro de este rango se puede decir que no hay autocorrelacion en los residuos
#ahgora vamosd a comprobar esto de manera grafica
plot(base1$residuals.mod1, pch=16, col= "darkgreen", ylab="resuduales", xlab= "in")
abline(h=cor (base1$est, base1$eco) )
#en este caso se puede ver que tenemos una grafica sin relacion 
#sin parton que es
#lo que estamos esperando
#por lo que se confirma que no hay autocorrelacion
#ya con estos datos podremos garantizar que tenemos un buen modelo
#y podriamos predecir o analizar los coeficientes....

#podemos tener un problema de rangos si predecimos sin considerar rangos
#de nuestra variable por lo que vamos a definir una nueva base con los limites

limbase1 <- seq (min (base1$eco), max (base1$eco), length = 10)
limbase1 <- data.frame((limbase1))
limbasep1 <- predict.lm(mod1, limbase1, interval = "prediction", se.fit = TRUE, data = base1)
head(limbasep1$fit)
#aqui te genera limites
## para dibujar los limites....
matplot(limbase1, limbasep1$fit, type = "l", xlab = "ingreso", ylab = "estatura" )
